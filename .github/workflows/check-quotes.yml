name: Check for Quote Updates

on:
  schedule:
    - cron: '0 15-23,0-3 * * *'  # Every hour from 8am to 8pm PDT
  workflow_dispatch:

permissions:
  actions: write
  contents: write

jobs:
  check-quotes:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
          
      - name: Install dependencies
        run: bun install
        
      - name: Restore quotes hash cache
        uses: actions/cache@v4
        with:
          path: quotes-hash.txt
          key: quotes-hash-${{ github.sha }}
          restore-keys: quotes-hash-
          
      - name: Check if quotes changed
        id: check
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          QUOTES_DATABASE_ID: ${{ secrets.QUOTES_DATABASE_ID }}
        run: bun run check-quotes
        continue-on-error: true  # Don't fail the workflow on exit code 1 or 2
        
      - name: Save updated hash
        if: steps.check.outcome == 'success'
        uses: actions/cache/save@v4
        with:
          path: quotes-hash.txt
          key: quotes-hash-${{ github.sha }}-${{ github.run_id }}
          
      - name: Trigger build workflow
        if: steps.check.outcome == 'success'
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'nextjs.yml',
              ref: 'main'
            })
            console.log('Build workflow (workflow_dispatch) triggered!')
            
      - name: Log result
        run: |
          if [ "${{ steps.check.outcome }}" = "success" ]; then
            echo "Quotes changed - build triggered"
          elif [ "${{ steps.check.outcome }}" = "failure" ] && [ "${{ steps.check.conclusion }}" = "success" ]; then
            echo "No changes - no build needed"  
          else
            echo "Error occurred - build may be needed"
          fi
